<?xml version="1.0" encoding="UTF-8"?>
<!--
* JOSE PABLO CASTRO VALVERDE                                            
* Copyright (C) EDDAP 2012                                             
* josepablo.castro@gmail.com 
* USB Comunication Toolbox                                          
* This file is released under the 3-clause BSD license. See COPYING-BSD.
 -->
<refentry version="5.0-subset Scilab" xml:id="hid_get_serial" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate: 2008-03-26 09:50:39 +0100 (mer., 26 mars 2008)
    $</pubdate>
  </info>

  <refnamediv>
    <refname>hid_get_serial</refname>

    <refpurpose>Get The Serial Number String from a HID device.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>[serial_string,serial_success]=hid_get_serial()</synopsis>
  </refsynopsisdiv>
  <refsection><title>Parameters</title>
    <variablelist>
    <varlistentry>  
      <term>serial_string</term>
        <listitem>
        : string A wide string
     </listitem> 
      </varlistentry>
      <varlistentry>  
      <term>serial_success</term>
        <listitem>
        : This function returns 0 on success and -1 on error
        </listitem> 
      </varlistentry>
    </variablelist>
   </refsection> 
  <refsection>
    <title>Description</title>

    <para>Get The Serial Number String from a HID device.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example">
    <![CDATA[
      clc
      VendorID="04D8";
      ProductID="900A";
      VendorID=uint16(hex2dec(VendorID));
      ProductID=uint16(hex2dec(ProductID));
      init_success=hid_init();
      if ( init_success < 0 ) then
         disp("unable to initialize the HIDAPI Library");
         return
      else
           disp("HIDAPI Library initialized");
      end
      open_success=hid_open(VendorID,ProductID);
      if ( open_success < 0 ) then
           disp("unable to open device");
           return
      else
           disp("Device Open");
      end
      [serial_string,serial_success]=hid_get_serial()
      if ( serial_success < 0 ) then
           disp("unable to get serial string");
           close_success=hid_close();
           exit_success=hid_exit();
           return
      else
           disp(serial_string);
      end
      close_success=hid_close();  
      if ( close_success < 0 ) then
         disp("unable to closed device");
      else
         disp("device closed");
      end
      exit_success=hid_exit();
      if ( exit_success < 0 ) then
         disp("unable to free static data associated with HIDAPI Library");
         return
      else
         disp("HIDAPI Library have been freed all of the static data associated");
      end
   ]]>
   </programlisting>
  </refsection>

  <refsection role="see also">
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="get_serialusb">get_serialusb</link>
      </member>
      <member>
        <link linkend="hid_open">hid_open</link>
      </member>
      <member>
        <link linkend="hid_close">hid_close</link>
      </member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <simplelist type="vert">
      <member>Jose Pablo Castro Valverde josepablo.castro@gmail.com</member>
    </simplelist>
  </refsection>
</refentry>
